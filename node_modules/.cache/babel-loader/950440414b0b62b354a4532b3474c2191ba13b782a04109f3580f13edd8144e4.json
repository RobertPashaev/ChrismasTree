{"ast":null,"code":"var _jsxFileName = \"/Users/robertpasaev/yakovled/treety/src/components/RadioModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport { Box, Typography } from '@mui/joy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RadioModal({\n  data,\n  onPriceChange,\n  onDimension,\n  dimensions\n}) {\n  _s();\n  const [values, setValues] = useState({\n    height: data.prices[0].height + ' см',\n    diameter: data.dimensions[0].radius + ' см'\n  });\n  const [selectedPrice, setSelectedPrice] = useState(data.prices[0].price);\n  const getPrice = values => {\n    const {\n      height\n    } = values;\n    const priceObj = data.prices.find(price => price.height === height);\n    if (priceObj) {\n      const price = priceObj.price;\n      return price;\n    }\n    return null;\n  };\n  const handleChange = (groupId, value) => {\n    setValues(prevValues => {\n      const newValues = {\n        ...prevValues,\n        [groupId]: value\n      };\n      if (groupId === 'height') {\n        const dimensionObj = data.dimensions.find(dimension => dimension.height === value.replace(' см', ''));\n        if (dimensionObj) {\n          newValues.diameter = dimensionObj.radius + ' см';\n        }\n      } else if (groupId === 'diameter') {\n        const dimensionObj = data.dimensions.find(dimension => dimension.radius === value.replace(' см', ''));\n        if (dimensionObj) {\n          newValues.height = dimensionObj.height + ' см';\n        }\n      }\n      const height = newValues.height.replace(' см', '');\n      const newPrice = getPrice({\n        ...newValues,\n        height\n      });\n      setSelectedPrice(newPrice);\n      onPriceChange(newPrice);\n      onDimension({\n        height: newValues.height.replace(' см', ''),\n        diameter: newValues.diameter.replace(' см', '')\n      });\n      return newValues;\n    });\n  };\n  const radioGroups = [{\n    id: 'height',\n    label: 'Высота:',\n    options: data.prices.map(price => price.height + ' см')\n  }, {\n    id: 'diameter',\n    label: 'Диаметр:',\n    options: data.dimensions.map(dimension => dimension.radius + ' см')\n  }, {\n    id: 'fastenings',\n    label: 'Крепления:',\n    options: [data.branch],\n    defaultValue: data.branch\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 2,\n    textAlign: 'center',\n    alignItems: 'center',\n    children: radioGroups.map(({\n      id,\n      label,\n      options,\n      defaultValue\n    }) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: 'fit-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        fontWeight: \"lg\",\n        fontSize: \"sm\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        orientation: \"horizontal\",\n        \"aria-labelledby\": id,\n        name: id,\n        value: values[id] || defaultValue || '',\n        onChange: event => handleChange(id, event.target.value),\n        sx: {\n          minHeight: 30,\n          padding: '4px',\n          borderRadius: '12px',\n          bgcolor: 'neutral.softBg',\n          '--RadioGroup-gap': '4px',\n          '--Radio-actionRadius': '8px'\n        },\n        children: options.map(option => /*#__PURE__*/_jsxDEV(Radio, {\n          color: \"neutral\",\n          value: option,\n          disableIcon: true,\n          label: option,\n          variant: \"plain\",\n          sx: {\n            px: 1,\n            alignItems: 'center'\n          },\n          slotProps: {\n            action: ({\n              checked\n            }) => ({\n              sx: {\n                ...(checked && {\n                  bgcolor: 'background.surface',\n                  boxShadow: 'sm',\n                  '&:hover': {\n                    bgcolor: 'background.surface'\n                  }\n                })\n              }\n            })\n          }\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(RadioModal, \"7Od/cLNllHcB8cLsw500UPRBhY8=\");\n_c = RadioModal;\nvar _c;\n$RefreshReg$(_c, \"RadioModal\");","map":{"version":3,"names":["React","useState","useEffect","Radio","RadioGroup","Box","Typography","jsxDEV","_jsxDEV","RadioModal","data","onPriceChange","onDimension","dimensions","_s","values","setValues","height","prices","diameter","radius","selectedPrice","setSelectedPrice","price","getPrice","priceObj","find","handleChange","groupId","value","prevValues","newValues","dimensionObj","dimension","replace","newPrice","radioGroups","id","label","options","map","branch","defaultValue","display","flexDirection","gap","textAlign","alignItems","children","sx","width","fontWeight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","orientation","name","onChange","event","target","minHeight","padding","borderRadius","bgcolor","option","color","disableIcon","variant","px","slotProps","action","checked","boxShadow","_c","$RefreshReg$"],"sources":["/Users/robertpasaev/yakovled/treety/src/components/RadioModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Radio from '@mui/joy/Radio';\nimport RadioGroup from '@mui/joy/RadioGroup';\nimport { Box, Typography } from '@mui/joy';\n\nexport default function RadioModal({ data, onPriceChange, onDimension, dimensions }) {\n  const [values, setValues] = useState({\n    height: data.prices[0].height + ' см',\n    diameter: data.dimensions[0].radius + ' см',\n  });\n  const [selectedPrice, setSelectedPrice] = useState(data.prices[0].price);\n\n  const getPrice = (values) => {\n    const { height } = values;\n    const priceObj = data.prices.find((price) => price.height === height);\n    if (priceObj) {\n      const price = priceObj.price;\n      return price;\n    }\n    return null;\n  };\n\n  const handleChange = (groupId, value) => {\n    setValues((prevValues) => {\n      const newValues = { ...prevValues, [groupId]: value };\n      if (groupId === 'height') {\n        const dimensionObj = data.dimensions.find(\n          (dimension) => dimension.height === value.replace(' см', '')\n        );\n        if (dimensionObj) {\n          newValues.diameter = dimensionObj.radius + ' см';\n        }\n      } else if (groupId === 'diameter') {\n        const dimensionObj = data.dimensions.find(\n          (dimension) => dimension.radius === value.replace(' см', '')\n        );\n        if (dimensionObj) {\n          newValues.height = dimensionObj.height + ' см';\n        }\n      }\n      const height = newValues.height.replace(' см', '');\n      const newPrice = getPrice({ ...newValues, height });\n      setSelectedPrice(newPrice);\n      onPriceChange(newPrice);\n      onDimension({\n        height: newValues.height.replace(' см', ''),\n        diameter: newValues.diameter.replace(' см', ''),\n      });\n      return newValues;\n    });\n  };\n\n  const radioGroups = [\n    {\n      id: 'height',\n      label: 'Высота:',\n      options: data.prices.map((price) => price.height + ' см'),\n    },\n    {\n      id: 'diameter',\n      label: 'Диаметр:',\n      options: data.dimensions.map((dimension) => dimension.radius + ' см'),\n    },\n    {\n      id: 'fastenings',\n      label: 'Крепления:',\n      options: [data.branch],\n      defaultValue: data.branch,\n    },\n  ];\n\n  return (\n    <Box\n      display='flex'\n      flexDirection='column'\n      gap={2}\n      textAlign={'center'}\n      alignItems={'center'}\n    >\n      {radioGroups.map(({ id, label, options, defaultValue }) => (\n        <Box\n          key={id}\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            width: 'fit-content',\n          }}\n        >\n          <Typography fontWeight='lg' fontSize='sm'>\n            {label}\n          </Typography>\n          <RadioGroup\n            orientation='horizontal'\n            aria-labelledby={id}\n            name={id}\n            value={values[id] || defaultValue || ''}\n            onChange={(event) => handleChange(id, event.target.value)}\n            sx={{\n              minHeight: 30,\n              padding: '4px',\n              borderRadius: '12px',\n              bgcolor: 'neutral.softBg',\n              '--RadioGroup-gap': '4px',\n              '--Radio-actionRadius': '8px',\n            }}\n          >\n            {options.map((option) => (\n              <Radio\n                key={option}\n                color='neutral'\n                value={option}\n                disableIcon\n                label={option}\n                variant='plain'\n                sx={{\n                  px: 1,\n                  alignItems: 'center',\n                }}\n                slotProps={{\n                  action: ({ checked }) => ({\n                    sx: {\n                      ...(checked && {\n                        bgcolor: 'background.surface',\n                        boxShadow: 'sm',\n                        '&:hover': {\n                          bgcolor: 'background.surface',\n                        },\n                      }),\n                    },\n                  }),\n                }}\n              />\n            ))}\n          </RadioGroup>\n        </Box>\n      ))}\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}